Генерация словаря Габора:
Скомпилировать Gabor.cpp в качестве первого аргумента передаётся nAtoms - количество атомов, в качестве второго szSignal - длина сигнала.
Программа печатает массив и записывает его в файл "g + nAtoms + szSignal + .txt"

Использование OMP:
Скомпилировать OMP.cpp в качестве первого аргумента передаётся nAtoms - количество атомов, в качестве второго szSignal - длина сигнала, в третьем szTest - длина сигнала с уменьшенной сеткой.
Убедитесь, что необходимые файлы ("g + nAtoms + szSignal + .txt" и "g + nAtoms + szTest + .txt") находятся в каталоге.
Вывод программы. В первых строках выводится residule (в каждой строчке szSignal значений, последнее число в строке - общее для всего этапа) на каждом шаге алгоритма. Если алгоритм остановился раньше, появится надпись No Good Atoms. В следующей строке указывается количество коэффициентов и оставшаяся неточность.
После надписи vCoefficients идут по порядку выбора коэффициенты, рядом написан номер атома в старом словаре, которому соответствует этот коэффициент.
Далее идёт вывод сигналов - aSignal - полученный нами, rSignal - эталонный. Diff - максимальное отклонение

Как подавать на вход функции я пока не придумал, так что для изменения функции надо руками менять код в OMP строки 114 и 117, определение vSignal и rSignal соответственно